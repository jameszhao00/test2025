/* tslint:disable */
/* eslint-disable */
/**
 * Session-Based Chatty LLM API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ChatMessage } from './ChatMessage';
import {
    ChatMessageFromJSON,
    ChatMessageFromJSONTyped,
    ChatMessageToJSON,
    ChatMessageToJSONTyped,
} from './ChatMessage';

/**
 * The response body after sending a message.
 * @export
 * @interface ChatResponse
 */
export interface ChatResponse {
    /**
     * 
     * @type {string}
     * @memberof ChatResponse
     */
    sessionId: string;
    /**
     * 
     * @type {ChatMessage}
     * @memberof ChatResponse
     */
    reply: ChatMessage;
}

/**
 * Check if a given object implements the ChatResponse interface.
 */
export function instanceOfChatResponse(value: object): value is ChatResponse {
    if (!('sessionId' in value) || value['sessionId'] === undefined) return false;
    if (!('reply' in value) || value['reply'] === undefined) return false;
    return true;
}

export function ChatResponseFromJSON(json: any): ChatResponse {
    return ChatResponseFromJSONTyped(json, false);
}

export function ChatResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ChatResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'sessionId': json['session_id'],
        'reply': ChatMessageFromJSON(json['reply']),
    };
}

export function ChatResponseToJSON(json: any): ChatResponse {
    return ChatResponseToJSONTyped(json, false);
}

export function ChatResponseToJSONTyped(value?: ChatResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'session_id': value['sessionId'],
        'reply': ChatMessageToJSON(value['reply']),
    };
}

